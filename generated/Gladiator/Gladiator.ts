// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get approved(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class GladiatorBurnt extends ethereum.Event {
  get params(): GladiatorBurnt__Params {
    return new GladiatorBurnt__Params(this);
  }
}

export class GladiatorBurnt__Params {
  _event: GladiatorBurnt;

  constructor(event: GladiatorBurnt) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class NameChanged extends ethereum.Event {
  get params(): NameChanged__Params {
    return new NameChanged__Params(this);
  }
}

export class NameChanged__Params {
  _event: NameChanged;

  constructor(event: NameChanged) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newName(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class NewGladiator extends ethereum.Event {
  get params(): NewGladiator__Params {
    return new NewGladiator__Params(this);
  }
}

export class NewGladiator__Params {
  _event: NewGladiator;

  constructor(event: NewGladiator) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get character(): NewGladiatorCharacterStruct {
    return changetype<NewGladiatorCharacterStruct>(
      this._event.parameters[2].value.toTuple()
    );
  }
}

export class NewGladiatorCharacterStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get sex(): boolean {
    return this[1].toBoolean();
  }

  get classNum(): i32 {
    return this[2].toI32();
  }

  get bonusStats(): i32 {
    return this[3].toI32();
  }

  get ethnicity(): i32 {
    return this[4].toI32();
  }

  get recruitedAt(): BigInt {
    return this[5].toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SexChanged extends ethereum.Event {
  get params(): SexChanged__Params {
    return new SexChanged__Params(this);
  }
}

export class SexChanged__Params {
  _event: SexChanged;

  constructor(event: SexChanged) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newSex(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Gladiator__getGladiatorOverviewResult {
  value0: string;
  value1: boolean;
  value2: i32;
  value3: i32;
  value4: i32;
  value5: BigInt;

  constructor(
    value0: string,
    value1: boolean,
    value2: i32,
    value3: i32,
    value4: i32,
    value5: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2))
    );
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3))
    );
    map.set(
      "value4",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value4))
    );
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }

  getValue0(): string {
    return this.value0;
  }

  getValue1(): boolean {
    return this.value1;
  }

  getValue2(): i32 {
    return this.value2;
  }

  getValue3(): i32 {
    return this.value3;
  }

  getValue4(): i32 {
    return this.value4;
  }

  getValue5(): BigInt {
    return this.value5;
  }
}

export class Gladiator__getUserGladiatorsResultValue1Struct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get sex(): boolean {
    return this[1].toBoolean();
  }

  get classNum(): i32 {
    return this[2].toI32();
  }

  get bonusStats(): i32 {
    return this[3].toI32();
  }

  get ethnicity(): i32 {
    return this[4].toI32();
  }

  get recruitedAt(): BigInt {
    return this[5].toBigInt();
  }
}

export class Gladiator__getUserGladiatorsResult {
  value0: Array<BigInt>;
  value1: Array<Gladiator__getUserGladiatorsResultValue1Struct>;

  constructor(
    value0: Array<BigInt>,
    value1: Array<Gladiator__getUserGladiatorsResultValue1Struct>
  ) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigIntArray(this.value0));
    map.set("value1", ethereum.Value.fromTupleArray(this.value1));
    return map;
  }

  getValue0(): Array<BigInt> {
    return this.value0;
  }

  getValue1(): Array<Gladiator__getUserGladiatorsResultValue1Struct> {
    return this.value1;
  }
}

export class Gladiator__gladiatorsResult {
  value0: string;
  value1: boolean;
  value2: i32;
  value3: i32;
  value4: i32;
  value5: BigInt;

  constructor(
    value0: string,
    value1: boolean,
    value2: i32,
    value3: i32,
    value4: i32,
    value5: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2))
    );
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3))
    );
    map.set(
      "value4",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value4))
    );
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }

  getName(): string {
    return this.value0;
  }

  getSex(): boolean {
    return this.value1;
  }

  getClassNum(): i32 {
    return this.value2;
  }

  getBonusStats(): i32 {
    return this.value3;
  }

  getEthnicity(): i32 {
    return this.value4;
  }

  getRecruitedAt(): BigInt {
    return this.value5;
  }
}

export class Gladiator extends ethereum.SmartContract {
  static bind(address: Address): Gladiator {
    return new Gladiator("Gladiator", address);
  }

  balanceOf(owner: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  baseTokenURI(): string {
    let result = super.call("baseTokenURI", "baseTokenURI():(string)", []);

    return result[0].toString();
  }

  try_baseTokenURI(): ethereum.CallResult<string> {
    let result = super.tryCall("baseTokenURI", "baseTokenURI():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getApproved(tokenId: BigInt): Address {
    let result = super.call("getApproved", "getApproved(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toAddress();
  }

  try_getApproved(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getApproved",
      "getApproved(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getGladiatorOverview(tokenId: BigInt): Gladiator__getGladiatorOverviewResult {
    let result = super.call(
      "getGladiatorOverview",
      "getGladiatorOverview(uint256):(string,bool,uint16,uint16,uint8,uint256)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );

    return new Gladiator__getGladiatorOverviewResult(
      result[0].toString(),
      result[1].toBoolean(),
      result[2].toI32(),
      result[3].toI32(),
      result[4].toI32(),
      result[5].toBigInt()
    );
  }

  try_getGladiatorOverview(
    tokenId: BigInt
  ): ethereum.CallResult<Gladiator__getGladiatorOverviewResult> {
    let result = super.tryCall(
      "getGladiatorOverview",
      "getGladiatorOverview(uint256):(string,bool,uint16,uint16,uint8,uint256)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Gladiator__getGladiatorOverviewResult(
        value[0].toString(),
        value[1].toBoolean(),
        value[2].toI32(),
        value[3].toI32(),
        value[4].toI32(),
        value[5].toBigInt()
      )
    );
  }

  getUserGladiators(user: Address): Gladiator__getUserGladiatorsResult {
    let result = super.call(
      "getUserGladiators",
      "getUserGladiators(address):(uint256[],(string,bool,uint16,uint16,uint8,uint256)[])",
      [ethereum.Value.fromAddress(user)]
    );

    return new Gladiator__getUserGladiatorsResult(
      result[0].toBigIntArray(),
      result[1].toTupleArray<Gladiator__getUserGladiatorsResultValue1Struct>()
    );
  }

  try_getUserGladiators(
    user: Address
  ): ethereum.CallResult<Gladiator__getUserGladiatorsResult> {
    let result = super.tryCall(
      "getUserGladiators",
      "getUserGladiators(address):(uint256[],(string,bool,uint16,uint16,uint8,uint256)[])",
      [ethereum.Value.fromAddress(user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Gladiator__getUserGladiatorsResult(
        value[0].toBigIntArray(),
        value[1].toTupleArray<Gladiator__getUserGladiatorsResultValue1Struct>()
      )
    );
  }

  gladiators(param0: BigInt): Gladiator__gladiatorsResult {
    let result = super.call(
      "gladiators",
      "gladiators(uint256):(string,bool,uint16,uint16,uint8,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Gladiator__gladiatorsResult(
      result[0].toString(),
      result[1].toBoolean(),
      result[2].toI32(),
      result[3].toI32(),
      result[4].toI32(),
      result[5].toBigInt()
    );
  }

  try_gladiators(
    param0: BigInt
  ): ethereum.CallResult<Gladiator__gladiatorsResult> {
    let result = super.tryCall(
      "gladiators",
      "gladiators(uint256):(string,bool,uint16,uint16,uint8,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Gladiator__gladiatorsResult(
        value[0].toString(),
        value[1].toBoolean(),
        value[2].toI32(),
        value[3].toI32(),
        value[4].toI32(),
        value[5].toBigInt()
      )
    );
  }

  isApprovedForAll(owner: Address, operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(operator)]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    owner: Address,
    operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(operator)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  marketplaceAddress(): Address {
    let result = super.call(
      "marketplaceAddress",
      "marketplaceAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_marketplaceAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "marketplaceAddress",
      "marketplaceAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ownerOf(tokenId: BigInt): Address {
    let result = super.call("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  priceBNB(): BigInt {
    let result = super.call("priceBNB", "priceBNB():(uint256)", []);

    return result[0].toBigInt();
  }

  try_priceBNB(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("priceBNB", "priceBNB():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  priceToken(): BigInt {
    let result = super.call("priceToken", "priceToken():(uint256)", []);

    return result[0].toBigInt();
  }

  try_priceToken(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("priceToken", "priceToken():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  token(): Address {
    let result = super.call("token", "token():(address)", []);

    return result[0].toAddress();
  }

  try_token(): ethereum.CallResult<Address> {
    let result = super.tryCall("token", "token():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tokenByIndex(index: BigInt): BigInt {
    let result = super.call("tokenByIndex", "tokenByIndex(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(index)
    ]);

    return result[0].toBigInt();
  }

  try_tokenByIndex(index: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenByIndex",
      "tokenByIndex(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenOfOwnerByIndex(owner: Address, index: BigInt): BigInt {
    let result = super.call(
      "tokenOfOwnerByIndex",
      "tokenOfOwnerByIndex(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(owner),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toBigInt();
  }

  try_tokenOfOwnerByIndex(
    owner: Address,
    index: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenOfOwnerByIndex",
      "tokenOfOwnerByIndex(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(owner),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenURI(tokenId: BigInt): string {
    let result = super.call("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toString();
  }

  try_tokenURI(tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  updateFee(): BigInt {
    let result = super.call("updateFee", "updateFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_updateFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("updateFee", "updateFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _priceBNB(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _priceToken(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _updateFee(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _token(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class BurnCall extends ethereum.Call {
  get inputs(): BurnCall__Inputs {
    return new BurnCall__Inputs(this);
  }

  get outputs(): BurnCall__Outputs {
    return new BurnCall__Outputs(this);
  }
}

export class BurnCall__Inputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class BurnCall__Outputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }
}

export class ChangeNameCall extends ethereum.Call {
  get inputs(): ChangeNameCall__Inputs {
    return new ChangeNameCall__Inputs(this);
  }

  get outputs(): ChangeNameCall__Outputs {
    return new ChangeNameCall__Outputs(this);
  }
}

export class ChangeNameCall__Inputs {
  _call: ChangeNameCall;

  constructor(call: ChangeNameCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get newName(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class ChangeNameCall__Outputs {
  _call: ChangeNameCall;

  constructor(call: ChangeNameCall) {
    this._call = call;
  }
}

export class ChangeSexCall extends ethereum.Call {
  get inputs(): ChangeSexCall__Inputs {
    return new ChangeSexCall__Inputs(this);
  }

  get outputs(): ChangeSexCall__Outputs {
    return new ChangeSexCall__Outputs(this);
  }
}

export class ChangeSexCall__Inputs {
  _call: ChangeSexCall;

  constructor(call: ChangeSexCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ChangeSexCall__Outputs {
  _call: ChangeSexCall;

  constructor(call: ChangeSexCall) {
    this._call = call;
  }
}

export class ConvertToCraftsmanCall extends ethereum.Call {
  get inputs(): ConvertToCraftsmanCall__Inputs {
    return new ConvertToCraftsmanCall__Inputs(this);
  }

  get outputs(): ConvertToCraftsmanCall__Outputs {
    return new ConvertToCraftsmanCall__Outputs(this);
  }
}

export class ConvertToCraftsmanCall__Inputs {
  _call: ConvertToCraftsmanCall;

  constructor(call: ConvertToCraftsmanCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get craftsmanClass(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class ConvertToCraftsmanCall__Outputs {
  _call: ConvertToCraftsmanCall;

  constructor(call: ConvertToCraftsmanCall) {
    this._call = call;
  }
}

export class ConvertToWeaponMasterCall extends ethereum.Call {
  get inputs(): ConvertToWeaponMasterCall__Inputs {
    return new ConvertToWeaponMasterCall__Inputs(this);
  }

  get outputs(): ConvertToWeaponMasterCall__Outputs {
    return new ConvertToWeaponMasterCall__Outputs(this);
  }
}

export class ConvertToWeaponMasterCall__Inputs {
  _call: ConvertToWeaponMasterCall;

  constructor(call: ConvertToWeaponMasterCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ConvertToWeaponMasterCall__Outputs {
  _call: ConvertToWeaponMasterCall;

  constructor(call: ConvertToWeaponMasterCall) {
    this._call = call;
  }
}

export class MintCall extends ethereum.Call {
  get inputs(): MintCall__Inputs {
    return new MintCall__Inputs(this);
  }

  get outputs(): MintCall__Outputs {
    return new MintCall__Outputs(this);
  }
}

export class MintCall__Inputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class MintCall__Outputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }
}

export class MintGiftCall extends ethereum.Call {
  get inputs(): MintGiftCall__Inputs {
    return new MintGiftCall__Inputs(this);
  }

  get outputs(): MintGiftCall__Outputs {
    return new MintGiftCall__Outputs(this);
  }
}

export class MintGiftCall__Inputs {
  _call: MintGiftCall;

  constructor(call: MintGiftCall) {
    this._call = call;
  }

  get beneficiary(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get classNum(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get sex(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }

  get bonusStats(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get ethnicity(): i32 {
    return this._call.inputValues[5].value.toI32();
  }
}

export class MintGiftCall__Outputs {
  _call: MintGiftCall;

  constructor(call: MintGiftCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFrom1Call extends ethereum.Call {
  get inputs(): SafeTransferFrom1Call__Inputs {
    return new SafeTransferFrom1Call__Inputs(this);
  }

  get outputs(): SafeTransferFrom1Call__Outputs {
    return new SafeTransferFrom1Call__Outputs(this);
  }
}

export class SafeTransferFrom1Call__Inputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SafeTransferFrom1Call__Outputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class SetBaseTokenURICall extends ethereum.Call {
  get inputs(): SetBaseTokenURICall__Inputs {
    return new SetBaseTokenURICall__Inputs(this);
  }

  get outputs(): SetBaseTokenURICall__Outputs {
    return new SetBaseTokenURICall__Outputs(this);
  }
}

export class SetBaseTokenURICall__Inputs {
  _call: SetBaseTokenURICall;

  constructor(call: SetBaseTokenURICall) {
    this._call = call;
  }

  get _baseTokenURI(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetBaseTokenURICall__Outputs {
  _call: SetBaseTokenURICall;

  constructor(call: SetBaseTokenURICall) {
    this._call = call;
  }
}

export class SetPricesCall extends ethereum.Call {
  get inputs(): SetPricesCall__Inputs {
    return new SetPricesCall__Inputs(this);
  }

  get outputs(): SetPricesCall__Outputs {
    return new SetPricesCall__Outputs(this);
  }
}

export class SetPricesCall__Inputs {
  _call: SetPricesCall;

  constructor(call: SetPricesCall) {
    this._call = call;
  }

  get _priceBNB(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _priceToken(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _updateFee(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetPricesCall__Outputs {
  _call: SetPricesCall;

  constructor(call: SetPricesCall) {
    this._call = call;
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateBonusStatsModCall extends ethereum.Call {
  get inputs(): UpdateBonusStatsModCall__Inputs {
    return new UpdateBonusStatsModCall__Inputs(this);
  }

  get outputs(): UpdateBonusStatsModCall__Outputs {
    return new UpdateBonusStatsModCall__Outputs(this);
  }
}

export class UpdateBonusStatsModCall__Inputs {
  _call: UpdateBonusStatsModCall;

  constructor(call: UpdateBonusStatsModCall) {
    this._call = call;
  }

  get newBonusStatsMod(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class UpdateBonusStatsModCall__Outputs {
  _call: UpdateBonusStatsModCall;

  constructor(call: UpdateBonusStatsModCall) {
    this._call = call;
  }
}

export class UpdateClassModCall extends ethereum.Call {
  get inputs(): UpdateClassModCall__Inputs {
    return new UpdateClassModCall__Inputs(this);
  }

  get outputs(): UpdateClassModCall__Outputs {
    return new UpdateClassModCall__Outputs(this);
  }
}

export class UpdateClassModCall__Inputs {
  _call: UpdateClassModCall;

  constructor(call: UpdateClassModCall) {
    this._call = call;
  }

  get newClassMod(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class UpdateClassModCall__Outputs {
  _call: UpdateClassModCall;

  constructor(call: UpdateClassModCall) {
    this._call = call;
  }
}

export class UpdateEthnicityModCall extends ethereum.Call {
  get inputs(): UpdateEthnicityModCall__Inputs {
    return new UpdateEthnicityModCall__Inputs(this);
  }

  get outputs(): UpdateEthnicityModCall__Outputs {
    return new UpdateEthnicityModCall__Outputs(this);
  }
}

export class UpdateEthnicityModCall__Inputs {
  _call: UpdateEthnicityModCall;

  constructor(call: UpdateEthnicityModCall) {
    this._call = call;
  }

  get newEthnicityMod(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class UpdateEthnicityModCall__Outputs {
  _call: UpdateEthnicityModCall;

  constructor(call: UpdateEthnicityModCall) {
    this._call = call;
  }
}

export class UpdateMarketplaceAddressCall extends ethereum.Call {
  get inputs(): UpdateMarketplaceAddressCall__Inputs {
    return new UpdateMarketplaceAddressCall__Inputs(this);
  }

  get outputs(): UpdateMarketplaceAddressCall__Outputs {
    return new UpdateMarketplaceAddressCall__Outputs(this);
  }
}

export class UpdateMarketplaceAddressCall__Inputs {
  _call: UpdateMarketplaceAddressCall;

  constructor(call: UpdateMarketplaceAddressCall) {
    this._call = call;
  }

  get newAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateMarketplaceAddressCall__Outputs {
  _call: UpdateMarketplaceAddressCall;

  constructor(call: UpdateMarketplaceAddressCall) {
    this._call = call;
  }
}

export class WithdrawBnbCall extends ethereum.Call {
  get inputs(): WithdrawBnbCall__Inputs {
    return new WithdrawBnbCall__Inputs(this);
  }

  get outputs(): WithdrawBnbCall__Outputs {
    return new WithdrawBnbCall__Outputs(this);
  }
}

export class WithdrawBnbCall__Inputs {
  _call: WithdrawBnbCall;

  constructor(call: WithdrawBnbCall) {
    this._call = call;
  }
}

export class WithdrawBnbCall__Outputs {
  _call: WithdrawBnbCall;

  constructor(call: WithdrawBnbCall) {
    this._call = call;
  }
}
